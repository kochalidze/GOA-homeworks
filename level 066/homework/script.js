 
// Easy
// დავალება NUM 1: შექმენი ფუნქცია, რომელიც მიიღებს რიცხვს და პირობით შეამოწმებს, არის თუ არა ის კენტი ან ლუწი.
function even_oddy() {
    let num = Number(prompt('Enter a number'));
    if (num % 2 == 0) {
        console.log(num + '-this number is even')
    }else {
        console.log(num + '-this number is oddy')
    }
}
even_oddy()


// დავალება NUM 2: შექმენი პირობა, რომელიც შეამოწმებს, არის თუ არა სია ცარიელი და თუ არა, იპოვოს რიცხვების ჯამი.
function list() {
    const list1 = [];
    if (list1.length == 0) {
        console.log('list is empty')
    } else {
        return  list1.reduce((a, b) => a + b, 0);
        
    }
}

// დავალება NUM 3: შექმენი ფუნქცია, რომელიც მიიღებს რიცხვების სიას, გაამრავლებს ყველა რიცხვს 3-ზე და დაიბრუნებს მხოლოდ იმ რიცხვებს, 
// რომლებიც 20-ზე მეტია.
function numbersList(numbers) {

}

// Medium
// დავალება NUM 4: შექმენი პირობა, რომელიც შეამოწმებს სიაში უდიდეს რიცხვს და დააბრუნებს მას.
function  maxNumber() {
    const numbers = [1, 2, 3, 4, 32, 12, 54];
    if (numbers.length > 0)  {
        return Math.max(...numbers);
        } else {
            return 'list is empty'
        }
}

// დავალება NUM 5: დაწერე ფუნქცია, რომელიც მიიღებს ორ რიცხვს და პირობით შეამოწმებს, თუ მათი ნამრავლი 100-ზე მეტია.

// Chad
// დავალება NUM 6: შექმენი ფუნქცია, რომელიც მიიღებს ტექსტს და შეამოწმებს, თუ ტექსტის პირველ და ბოლო ასოები ერთნაირია.
// დავალება NUM 7: შექმენი ფუნქცია, რომელიც მიიღებს ტექსტს და დააბრუნებს თითოეული ასოს სიხშირეს, ანუ რამდენჯერ გვხვდება თითოეული ასო ტექსტში.

// Giga chad
// დავალება NUM 8: შექმენი ფუნქცია, რომელიც მიიღებს ტექსტს და შეამოწმებს, არის თუ არა ის პალინდრომი (ტექსტი, რომელიც წაკითხვისას ერთნაირად ჩანს როგორც წინ და უკან, მაგალითად: "level").